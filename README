#My Workout Tracker Project attempt.
## UseCase Diagram

## Class Diagram

##Description
#This Projects sets out to make it easier to track a workout, logging exercises and personal bests.
It is designed with resistance training in mind.
It is developed with Spring boot framework , MySQL for database.
REST api is used with CRUD operations .
A Controller is created for each class what uses the services to

## Technologies Used

- **Java 22**: The programming language used for development.
- **Spring Boot 3.3.1**: Framework used to build the RESTful API.
- **Maven**: Dependency management and build tool.
- **H2 Database**: In-memory database used for development and testing.
- **JPA/Hibernate**: ORM framework for database interactions.
- **Spring Security**: For securing the API endpoints.
- **Jackson**: For JSON serialization and deserialization.
- **SLF4J + Logback**: Logging framework.
- **JUnit 5**: Testing framework.
- **Postman**: API testing tool.

## Controllers and Routes Structure
### WorkoutController
- `GET /api/workouts`: List all workouts
- `GET /api/workouts/{id}`: View a specific workout
- `POST /api/workouts`: Add a new workout
- `PUT /api/workouts/{id}`: Update an existing workout
- `DELETE /api/workouts/{id}`: Delete a specific workout

### ExerciseController ## TODO
- `GET /api/exercises`: List all exercises
- `GET /api/exercises/{id}`: View a specific exercise
- `POST /api/exercises`: Add a new exercise
- `PUT /api/exercises/{id}`: Update an existing exercise
- `DELETE /api/exercises/{id}`: Delete a specific exercise

### PersonalBestController ## TODO
- `GET /api/personal-bests`: List all personal bests
- `GET /api/personal-bests/{id}`: View a specific personal best
- `POST /api/personal-bests/update`: Update or set a new personal best


## Task Manager
- **Trello Board**: https://trello.com/b/FBSKckfb/ironhack-final-project

##Presentation
- **Presentation Slides**: https://prezi.com/p/edit/lld56_vpewxe/

##Future work
# Connect other applications like a heart rate monitor app.
# Make suggestions based on previous workouts.
# Build an UI for it.

##Resources
- **IronHack Portal
- **Google
- **AI Chatbot
- **Spring Boot Documentation**: [Spring Boot](https://spring.io/projects/spring-boot)
- **Thymeleaf Documentation**: [Thymeleaf](https://www.thymeleaf.org/documentation.html)
- **Bootstrap Documentation**: [Bootstrap](https://getbootstrap.com/docs/5.0/getting-started/introduction/)
- **H2 Database Documentation**: [H2 Database](http://www.h2database.com/html/main.html)
- **Maven Documentation**: [Maven](https://maven.apache.org/guides/index.html)

